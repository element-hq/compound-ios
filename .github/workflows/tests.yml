# This workflow will build a Swift project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-swift

name: Tests

on:
  pull_request:
    branches: [ "main" ]

jobs:
  tests:

    runs-on: macos-13

    steps:
    - name: Checkout code and snapshots
      uses: nschloe/action-cached-lfs-checkout@v1
      with:
        submodules: recursive

    - name: Configure Xcode 15
      run: |
        sudo xcode-select -s /Applications/Xcode_15.0.1.app
        echo "Creating Runtimes folder if needed..."
        sudo mkdir -p /Library/Developer/CoreSimulator/Profiles/Runtimes
        echo "Creating symlink of the iOS 16.4 runtime..."
        sudo ln -s /Applications/Xcode_14.3.1.app/Contents/Developer/Platforms/iPhoneOS.platform/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS.simruntime /Library/Developer/CoreSimulator/Profiles/Runtimes/iOS\ 16.4.simruntime

    - name: Run tests
      run: xcodebuild test -scheme 'Compound' -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 14,OS=16.4' -skipPackagePluginValidation -resultBundlePath Logs/CompoundTests.xcresult

    - name: Zip artifacts
      if: failure() # We only care about artefacts if the tests fail
      run: zip -r Logs/CompoundTests.xcresult.zip Logs/CompoundTests.xcresult/

    - name: Archive artifacts
      uses: actions/upload-artifact@v3
      if: failure() # We only care about artefacts if the tests fail
      with:
        name: test-results
        path: Logs/CompoundTests.xcresult.zip
        retention-days: 1
        if-no-files-found: ignore
 